Description: >
  Manages network permissions for our public subnets

Parameters:
  Datacenter:
    Description: Naming convention of the datacenter we are creating
    Type: String

Resources:
  # Creates a Network ACL
  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${Datacenter}:VpcId"

  # Inbound ACL Rules
  SSHInboundAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      Protocol: 6
      RuleAction: Allow
      RuleNumber: 122
      PortRange:
        From: 22
        To: 22

  HTTPInboundAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      Protocol: 6
      RuleAction: Allow
      RuleNumber: 180
      PortRange:
        From: 80
        To: 80

  HTTPSInboundAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      Protocol: 6
      RuleAction: Allow
      RuleNumber: 1443
      PortRange:
        From: 443
        To: 443

  ICMPInboundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      Protocol: 1
      RuleAction: Allow
      RuleNumber: 3000
      Icmp:
        Code: -1
        Type: -1

  # Outbound ACL rules

  SSHOutboundAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      Protocol: 6
      RuleAction: Allow
      RuleNumber: 122
      PortRange:
        From: 22
        To: 22

  HTTPOutboundAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      Protocol: 6
      RuleAction: Allow
      RuleNumber: 180
      PortRange:
        From: 80
        To: 80

  HTTPSOutboundAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      Protocol: 6
      RuleAction: Allow
      RuleNumber: 1443
      PortRange:
        From: 443
        To: 443

  ICMPInboundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      Protocol: 1
      RuleAction: Allow
      RuleNumber: 3000
      Icmp:
        Code: -1
        Type: -1

  SubnetAclAssociationAZ0:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub "${Datacenter}:PublicSubnetAZ0"
      NetworkAclId: !Ref NetworkAcl

  SubnetAclAssociationAZ1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub "${Datacenter}:PublicSubnetAZ1"
      NetworkAclId: !Ref NetworkAcl

  SubnetAclAssociationAZ2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub "${Datacenter}:PublicSubnetAZ2"
      NetworkAclId: !Ref NetworkAcl
